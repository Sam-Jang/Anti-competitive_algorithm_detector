import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Product {
    private String name;
    private String company;
    private double price;

    public Product(String name, String company, double price) {
        this.name = name;
        this.company = company;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public String getCompany() {
        return company;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " - " + company + " - $" + String.format("%.2f", price);
    }
}

class Detector {
    private List<Product> products = new ArrayList<>();
    private String companyName;
    private final double factor = 1.05; // Increase price by 5% above average competitor price

    public Detector(String companyName) {
        this.companyName = companyName;
    }

    public void addProduct(String name, String company, double price) {
        products.add(new Product(name, company, price));
    }

    public void adjustPrices() {
        Map<String, List<Double>> competitorAvgPrices = new HashMap<>();
        List<Product> companyProducts = new ArrayList<>();

        for (Product product : products) {
            if (product.getCompany().equals(companyName)) {
                companyProducts.add(product);
            } else {
                competitorAvgPrices
                    .computeIfAbsent(product.getName(), k -> new ArrayList<>())
                    .add(product.getPrice());
            }
        }

        for (Map.Entry<String, List<Double>> entry : competitorAvgPrices.entrySet()) {
            double avgPrice = entry.getValue().stream().mapToDouble(Double::doubleValue).average().orElse(0.0);
            competitorAvgPrices.put(entry.getKey(), List.of(avgPrice));
        }

        for (Product product : companyProducts) {
            if (competitorAvgPrices.containsKey(product.getName())) {
                product.setPrice(competitorAvgPrices.get(product.getName()).get(0) * factor);
            }
        }
    }

    public void displayProducts() {
        for (Product product : products) {
            System.out.println(product);
        }
    }
}